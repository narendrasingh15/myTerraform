# Description: Playbook to Install Ec2 instance having Key, SG, AZ etc allocated then running commands using remote-exec then transferrring a File from Local to Remote Ec2-Server
resource "aws_instance" "Naren-Instance" {
  ami = "ami-04ea996e7a3e7ad6b"
  availability_zone = "ap-south-1b"
  key_name = "MyKeyPair"
  instance_type = "t2.micro"
  security_groups = ["myMumbaiSG"]
  tags {
    Name = "TestServer"
    Role = "Terraform-Testing"
  }
  provisioner "remote-exec" {
    inline = [
      "sudo apt-get update -y",
      "sudo apt-get install apache2 -y",
      "sudo /etc/init.d/apache2 start",
      "sudo chmod 777 /var/www/html/index.html"
    ]
  }
  provisioner "file" {
    source = "/home/ubuntu/playbook/html_files/naren.html"
    destination = "/var/www/html/index.html"
    }
  connection {
    user = "ubuntu"
    type = "ssh"
    private_key = "${file("./Keys/MyKeyPair.pem")}"
    }
  provisioner "remote-exec" {
    inline = [
      "sudo chmod 644 /var/www/html/index.html"
    ]
  }
}
resource "aws_elb" "Naren-ELB" {
  name = "Naren-ELB-Test"
  availability_zones = ["ap-south-1a", "ap-south-1b"]
  listener {
    instance_port     = 80
    instance_protocol = "http"
    lb_port           = 80
    lb_protocol       = "http"
  }
  health_check {
    healthy_threshold   = 2
    unhealthy_threshold = 2
    timeout             = 3
    target              = "HTTP:80/"
    interval            = 10
  }
  instances = ["${aws_instance.Naren-Instance.id}"]
   tags {
    Name = "TestELB"
    Role = "Terraform-Testing"
  }
}
output "public_ip" {
  value = "${aws_instance.Naren-Instance.public_ip}"
}
output "ELB_DNS" {
  value = "${aws_elb.Naren-ELB.dns_name}"
}